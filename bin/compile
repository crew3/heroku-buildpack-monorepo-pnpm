#!/usr/bin/env bash

# Ensure wildcards in globs match dotfiles too.
shopt -s dotglob

indent() {
    sed -u 's/^/      /'
}

BUILD_DIR="$1"
CACHE_DIR="$2"
ENV_DIR="$3"
STAGE="$(mktemp -d)"
BUILD_SCRIPT="heroku-postbuild"

if [ ! -f "${ENV_DIR}/PACKAGE_NAME" ]; then
    echo "PACKAGE_NAME was not set. Aborting" | indent
    exit 1
fi

PACKAGE_NAME="$(cat "${ENV_DIR}/PACKAGE_NAME")"

if [ -f "${ENV_DIR}/BUILD_SCRIPT" ]; then
    BUILD_SCRIPT="$(cat "${ENV_DIR}/BUILD_SCRIPT")"
fi

# build all packages and and project before prune
cd "$BUILD_DIR" && \
    dotenv -e .env -- pnpm turbo ${BUILD_SCRIPT} --filter=${PACKAGE_NAME}

# installing prod dependencies
echo "Installing production dependencies for ${PACKAGE_NAME}..." | indent

echo "Prune ${PACKAGE_NAME} devDependencies" | indent
pnpm clean
rm -rf ./node_modules
pnpm --filter ${PACKAGE_NAME}... install --prod
pnpm prune --prod

if [ "${PACKAGE_NAME}" == "@crew3/discord" ] || [ "${PACKAGE_NAME}" == "@crew3/backend" ] || [ "${PACKAGE_NAME}" == "@crew3/tp-listener" ]; then
    echo "Deleting webapp and client package" | indent
    rm -rf ./packages/webapp
    rm -rf ./packages/client
    rm -rf ./packages/ds
    rm -rf ./packages/queries
    rm -rf ./packages/tokens
    rm -rf ./.git
    rm -rf ./.github
    rm -rf ./packages/reverse-proxy
    rm -rf ./packages/i18n
    if [ "${PACKAGE_NAME}" == "@crew3/backend" ]; then
        echo "Deleting discord and tp listener packages" | indent
        rm -rf ./packages/discord-bot
        rm -rf ./packages/tp-listener
    fi
    if [ "${PACKAGE_NAME}" == "@crew3/discord" ]; then
        echo "Deleting backend and tp-listener packages" | indent
        rm -rf ./packages/backend
        rm -rf ./packages/tp-listener
    fi
    if [ "${PACKAGE_NAME}" == "@crew3/tp-listener" ]; then
        echo "Deleting discord and backend packages" | indent
        rm -rf ./packages/discord-bot
        rm -rf ./packages/backend
    fi
fi

du -h -d 1 packages/* | sort -hr