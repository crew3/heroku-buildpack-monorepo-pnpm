#!/usr/bin/env bash

# Ensure wildcards in globs match dotfiles too.
shopt -s dotglob

indent() {
    sed -u 's/^/      /'
}

BUILD_DIR="$1"
CACHE_DIR="$2"
ENV_DIR="$3"
STAGE="$(mktemp -d)"
BUILD_SCRIPT="heroku-postbuild"

if [ ! -f "${ENV_DIR}/PACKAGE_NAME" ]; then
    echo "PACKAGE_NAME was not set. Aborting" | indent
    exit 1
fi

PACKAGE_NAME="$(cat "${ENV_DIR}/PACKAGE_NAME")"

if [ -f "${ENV_DIR}/BUILD_SCRIPT" ]; then
    BUILD_SCRIPT="$(cat "${ENV_DIR}/BUILD_SCRIPT")"
fi

echo "build all packages and project before prune" | indent
cd "$BUILD_DIR" && \
    dotenv -e .env -- pnpm turbo ${BUILD_SCRIPT} --filter=${PACKAGE_NAME}

echo "clean node modules for all packages and project" | indent
pnpm clean
rm -rf ./node_modules

if [ "${PACKAGE_NAME}" == "discord" ] || [ "${PACKAGE_NAME}" == "backend" ] || [ "${PACKAGE_NAME}" == "api" ] || [ "${PACKAGE_NAME}" == "tp-listener" ]; then
    echo "Deleting webapp and client package" | indent
    rm -rf ./packages/webapp
    rm -rf ./packages/client
    rm -rf ./packages/ds
    rm -rf ./packages/queries
    rm -rf ./packages/tokens
    rm -rf ./.git
    rm -rf ./.github
    rm -rf ./packages/reverse-proxy
    rm -rf ./packages/i18n
    if [ "${PACKAGE_NAME}" == "api" ]; then
        echo "Deleting backend, discord and tp listener packages" | indent
        rm -rf ./packages/discord-bot
        rm -rf ./packages/tp-listener
        rm -rf ./packages/backend
    fi
    if [ "${PACKAGE_NAME}" == "backend" ]; then
        echo "Deleting api, discord and tp listener packages" | indent
        rm -rf ./packages/discord-bot
        rm -rf ./packages/tp-listener
        rm -rf ./packages/api
    fi
    if [ "${PACKAGE_NAME}" == "discord" ]; then
        echo "Deleting both backends and tp-listener packages" | indent
        rm -rf ./packages/tp-listener
        rm -rf ./packages/backend
        rm -rf ./packages/api
    fi
    if [ "${PACKAGE_NAME}" == "tp-listener" ]; then
        echo "Deleting both backends and discord packages" | indent
        rm -rf ./packages/discord-bot
        rm -rf ./packages/backend
        rm -rf ./packages/api
    fi
fi

if [ "${PACKAGE_NAME}" == "client" ]; then
    echo "Deleting webapp, backend, discord and tp-listener package" | indent
    rm -rf ./packages/webapp
    rm -rf ./packages/backend
    rm -rf ./packages/discord-bot
    rm -rf ./packages/tp-listener
    rm -rf ./.git
    rm -rf ./.github
fi

echo "Installing production dependencies for ${PACKAGE_NAME}..." | indent
pnpm --filter ${PACKAGE_NAME}... install --prod

echo "Prune ${PACKAGE_NAME} devDependencies" | indent
pnpm prune --prod

echo "Check size" | indent
du -h -d 2 | sort -hr